name: Build and Release
on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.19.20'

jobs:
  release:
    name: build and release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup and Build on FreeBSD
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          release: 14.1
          prepare: |
            pkg install -y wget curl git go121 gcc bash jq node zip
            ln -s /usr/local/bin/go121 /usr/local/bin/go
          run: |
            # Set version
            if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
              VERSION=${{ github.event.inputs.tag }}
            else
              VERSION=$(curl -sL "https://api.github.com/repos/naiba/nezha/releases/latest" | jq -r .tag_name)
            fi

            # 检查版本是否成功获取
            if [ -z "${VERSION}" ]; then
              echo "Error: VERSION could not be determined" >&2
              exit 1
            fi

            echo "VERSION=${VERSION}" >> $GITHUB_ENV
            echo "Version set to: ${VERSION}"

            # Build the project
            version_num=${VERSION#v}

            if git ls-remote --tags https://github.com/naiba/nezha | grep -q "refs/tags/${VERSION}"; then
              git clone -b ${VERSION} https://github.com/naiba/nezha
            else
              echo "Error: Tag ${VERSION} not found in naiba/nezha repository" && exit 1
            fi

            rm -rf nezha/pkg/geoip/geoip.db
            wget -qO nezha/pkg/geoip/geoip.db https://ipinfo.io/data/free/country.mmdb?token=${{ secrets.IPINFO_TOKEN }}
            cd nezha/cmd/dashboard
            go build -ldflags="-s -w --extldflags '-static -fpic' -X github.com/naiba/nezha/service/singleton.Version=${version_num}"
            echo "====================1========================"
            file dashboard

            # Prepare dist
            mkdir -p /tmp/dist
            cp -rf ../../resource /tmp/dist
            rm /tmp/dist/resource/resource.go
            mv dashboard /tmp/dist/nezha-dashboard
            echo "====================2========================"

            # Prepare config.yaml
            mkdir -p /tmp/dist/data
            cp -rf ../../script/config.yaml /tmp/dist/data/config.yaml
            echo "====================3========================"

            # Compress dist files
            cd /tmp/dist
            echo "====================4========================"
            ls -all .
            zip -qr nezha-dashboard.zip .
            echo "====================5========================"
            ls -all .

            # Move artifacts to a location accessible outside the VM
            mkdir -p /freebsd_artifacts
            mv nezha-dashboard.zip /freebsd_artifacts/
            echo "====================6========================"
            ls -all  /freebsd_artifacts

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nezha-freebsd
          path: /freebsd_artifacts/*

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          artifacts: "/freebsd_artifacts/*.zip,/freebsd_artifacts/*.tar.gz"
          generateReleaseNotes: true
          makeLatest: legacy
          omitBody: false
          omitBodyDuringUpdate: false
          omitDraftDuringUpdate: false
          omitName: false
          omitNameDuringUpdate: false
          omitPrereleaseDuringUpdate: false
          removeArtifacts: false
          replacesArtifacts: true
          skipIfReleaseExists: false
          updateOnlyUnreleased: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
