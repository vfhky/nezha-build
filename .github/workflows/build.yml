name: Build and Release
on:
  push:
    tags:
      - 'v*'  # 当推送带有 'v*' 的 Tag 时自动触发
  workflow_dispatch:  # 手动触发工作流
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.18.6'  # 默认值，可以手动修改

jobs:
  release:
    name: build and release
    runs-on: ubuntu-latest
    env:
      DIST_DIR: '${{ github.workspace }}/dist'
    steps:
      - uses: actions/checkout@v4

      - name: Set version
        id: set_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VERSION=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          else
            version=$(curl -sL "https://api.github.com/repos/naiba/nezha/releases/latest" | jq -r .tag_name)
            echo "VERSION=${version}" >> $GITHUB_ENV
          fi
          echo "version=${VERSION}"

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup FreeBSD environment
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          release: 14.1
          prepare: |
            pkg install -y wget curl git go121 gcc bash jq node
            ln -s /usr/local/bin/go121 /usr/local/bin/go

      - name: Build the project
        run: |
          version_num=${VERSION#v}
          git clone -b ${VERSION} https://github.com/naiba/nezha
          rm -rf nezha/pkg/geoip/geoip.db
          wget -O nezha/pkg/geoip/geoip.db https://ipinfo.io/data/free/country.mmdb?token=${{ secrets.IPINFO_TOKEN }}
          cd nezha/cmd/dashboard
          go build -ldflags="-s -w --extldflags '-static -fpic' -X github.com/naiba/nezha/service/singleton.Version=${version_num}"

      - name: Fix dist
        run: |
          mkdir -p "${DIST_DIR}"
          cp -rf "nezha/resource" "${DIST_DIR}"
          rm "${DIST_DIR}/resource/resource.go"
          mv -f "nezha/cmd/dashboard/dashboard" "${DIST_DIR}/nezha-dashboard"

      - name: Prepare config.yaml
        run: |
          mkdir -p "${DIST_DIR}/data"
          cp -rf nezha/script/config.yaml "${DIST_DIR}/data/config.yaml"

      - name: Compress dist files
        run: |
          echo "Checking DIST_DIR before compression:"
          ls -l "${DIST_DIR}"

          TEMP_DIR=$(mktemp -d)
          cp -R "${DIST_DIR}/." "$TEMP_DIR"  # 确保复制所有文件，包括隐藏文件
          echo "Checking TEMP_DIR after copying from DIST_DIR:"
          ls -l "$TEMP_DIR"
    
          cd "$TEMP_DIR"
          zip -qr "${DIST_DIR}/nezha-dashboard.zip" .  # 使用 -q 静默模式
          tar -czf "${DIST_DIR}/nezha-dashboard.tar.gz" .

          echo "Files in DIST_DIR after compression:"
          ls -l "${DIST_DIR}"


      - name: Check DIST_DIR
        run: |
          echo "Checking contents of DIST_DIR:"
          ls -l "${DIST_DIR}"

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: nezha-freebsd
          path: ${{ env.DIST_DIR }}/*

      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.VERSION }}
          artifacts: "${{ env.DIST_DIR }}/*.zip, ${{ env.DIST_DIR }}/*.tar.gz"
          generateReleaseNotes: true
          makeLatest: legacy
          omitBody: false
          omitBodyDuringUpdate: false
          omitDraftDuringUpdate: false
          omitName: false
          omitNameDuringUpdate: false
          omitPrereleaseDuringUpdate: false
          removeArtifacts: false
          replacesArtifacts: true
          skipIfReleaseExists: false
          updateOnlyUnreleased: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
