name: Build Nezha

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64

    runs-on: ubuntu-latest
    container:
      image: goreleaser/goreleaser-cross:v1.21
   
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}

    steps:
    - name: Checkout nezha repository
      uses: actions/checkout@v4
      with:
        repository: naiba/nezha
        fetch-depth: 0

    - name: Set up Git
      run: |
        git config --global --add safe.directory /__w/your-repo-name/your-repo-name
        git fetch --tags

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.x'

    - name: Build
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: build --single-target --clean --skip=validate

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nezha-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/*/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./assets

    - name: Archive and compress binaries
      run: |
        for file in assets/*/*/*; do
          if [ -f "$file" ]; then
            chmod +x "$file"
            export fileWithoutExt=${file%.*}
            zip -jr "$fileWithoutExt.zip" "$file"
          fi
        done

    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "assets/*/*/*.zip"
        generateReleaseNotes: true
