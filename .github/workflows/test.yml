name: Build Nezha

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        goos: [linux, windows]
        goarch: [amd64]
        include:
          - goos: linux
            goarch: s390x
          - goos: linux
            goarch: arm64


    runs-on: ubuntu-latest
    container:
      image: goreleaser/goreleaser-cross:v1.21
    
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}

    steps:
    - name: Set up Git
      run: |
        git config --global --add safe.directory /__w/nezha-build/nezha-build
        git config --global --add safe.directory "$GITHUB_WORKSPACE"

    - name: Checkout nezha repository
      uses: actions/checkout@v4
      with:
        repository: naiba/nezha
        fetch-depth: 0

    - name: Fetch tags
      run: |
        git fetch --tags
        echo "===============0.0================"
        pwd
        echo "===============0.0================"
        ls -all .

    - name: Fetch IPInfo GeoIP Database
      env:
        IPINFO_TOKEN: ${{ secrets.IPINFO_TOKEN }}
      run: |
        rm pkg/geoip/geoip.db
        wget -qO pkg/geoip/geoip.db https://ipinfo.io/data/free/country.mmdb?token=${IPINFO_TOKEN}
        echo "===============1================"
        ls -all ${{ github.workspace }}
        echo "===============2================"
        ls -all .

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21.x'

    - name: Build
      uses: goreleaser/goreleaser-action@v6
      with:
        distribution: goreleaser
        version: '~> v2'
        args: build --single-target --clean --skip=validate

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dashboard-${{ matrix.goos }}-${{ matrix.goarch }}
        path: |
          ./dist/*/*

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Release
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./assets

    - name: Archive and compress binaries
      run: |
        for file in assets/*/*/*; do
          if [ -f "$file" ]; then
            chmod +x "$file"
            export fileWithoutExt=${file%.*}
            zip -jr "$fileWithoutExt.zip" "$file"
          fi
        done

    - name: Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: "assets/*/*/*.zip"
        generateReleaseNotes: true
